package ch.speleo.scis.model.conservation;

import java.io.*;
import java.util.*;

import javax.persistence.*;

import org.hibernate.envers.Audited;
import org.openxava.annotations.*;

import ch.speleo.scis.model.common.*;
import ch.speleo.scis.model.karst.*;

/**
 * Class modeling a visit of a karst object
 * 
 * @author Julien
 * @version 1.0
 */
@Entity
@Table(name = "VISIT",
	uniqueConstraints =
		@UniqueConstraint(columnNames = "ID"))
@Audited
@Tab(properties = "visitObject,"
		+ "visitDate,"
		+ "visitName,"
		+ "visitSurname,"
		+ "visitWeather,"
		+ "visitState,"
		+ "visitDescription,"
		+ "visitTrashBool,"
		+ "visitTrash,"
		+ "visitSpraysBool,"
		+ "visitSprays,"
		+ "visitDamagesBool,"
		+ "visitDamages,"
		+ "visitPhotos,"
		+ "visitMeasuresBool,"
		+ "visitMeasures,"
		+ "visitRemarks,"
		+ "deleted,"
		, 
	rowStyles = {@RowStyle(style="deletedData", property="deleted", value="true")})
@Views({
	@View(name = "Short", members = "visitDate,"
			+ "visitObject,"
			+ "visitName,"
			+ "visitSurname"),
	@View(members = "visitObject;"
			+ "visitAddress [visitDate, visitName, visitSurname;"
			+ "visitDescription];"
			+ "depredations [visitTrashBool, visitTrash; visitSpraysBool, visitSprays; visitDamagesBool, visitDamages]"
			+ "visitDescription;"
			+ "visitPhotos;"
			+ "visitMeasuresBool;"
			+ "visitMeasures;"
			+ "visitRemarks;"
			+ "visitWeather")
})
public class Visit
extends GenericIdentityWithDeleted implements Serializable, Identifiable {
    /**
     * Serial version UID.
     */
    private static final long serialVersionUID = 5654131353056129922L;
    
    /**
     * Date of visit
     */
    @Required
    @Temporal(TemporalType.DATE)
    @Column(name = "VISIT_DATE")
    private Date visitDate;
    
    /**
     * Date of visit
     */
    @ManyToOne
    @JoinColumn(name="ID_VISIT_OBJECT", referencedColumnName="ID")
    @ReferenceView(value = "Short")
    private KarstObject visitObject;
    
    /**
     * Surname of the visitor
     */
    @Column(name = "VISIT_SURNAME", length=25)
    private String visitSurname;
    
    /**
     * Name of the visitor
     */
    @Column(name = "VISIT_NAME", length=25)
    private String visitName;
    
    /**
     * Weather at the time of the visit (or just before in case it's an underground visit)
     */
    @Column(name = "VISIT_WEATHER", length=25)
    private String visitWeather;
    
    /**
     * State ascertained by the visitor
     */
    @Column(name = "VISIT_STATE", length = 5000)
    @Stereotype("BIGTEXT_AREA")
    private String visitState;
    
    /**
     * Was there trash ?
     */
    
    @Column(name = "VISIT_TRASH_BOOL")
    private boolean visitTrashBool;
    
    /**
     * Trash deplored by the visitor
     */
    @Column(name = "VISIT_TRASH", length = 100)
    private String visitTrash;
    
    /**
     * Were there sprays ?
     */
    
    @Column(name = "VISIT_SPRAYS_BOOL")
    private boolean visitSpraysBool;
    
    /**
     * Sprays ascertained by the visitor
     */
    @Column(name = "VISIT_SPRAYS", length = 100)
    private String visitSprays;
    
    /**
     * Were there damages ?
     */
    
    @Column(name = "VISIT_DAMAGES_BOOL")
    private boolean visitDamagesBool;
    
    /**
     * Damages ascertained by the visitor
     */
    @Column(name = "VISIT_DAMAGES", length = 100)
    private String visitDamages;
    
    /**
     * General description of the object when visited
     */
    @Column(name = "VISIT_DESCRIPTION")
    private String visitDescription;
    
    /**
     * Links to the photos of the visit
     */
    
    @Column(name = "VISIT_PHOTOS")
    private String visitPhotos;
    
    /**
     * Are there measures to be taken
     */
    
    @Column(name = "VISIT_MEASURES_BOOL")
    private boolean visitMeasuresBool;
    
    /**
     * What measures are to be taken
     */
    
    @Column(name = "VISIT_MEASURES")
    private String visitMeasures;
    
    /**
     * Other remarks about the object
     */
    
    @Column(name = "VISIT_REMARKS")
    private String visitRemarks;
    
    /**
     * Empty constructor
     */
    public Visit() { }
    
    /**
     * Getters and setters generated by Eclipse
     */
    
    /**
     * returns visitDate
     */
    
    public Date getVisitDate() {
		return visitDate;
	}

    /**
     * parameters visitDate
     */

	public void setVisitDate(Date visitDate) {
		this.visitDate = visitDate;
	}

    /**
     * returns visitObject
     */

	public KarstObject getVisitObject() {
		return visitObject;
	}

    /**
     * parameters visitObject
     */

	public void setVisitObject(KarstObject visitObject) {
		this.visitObject = visitObject;
	}

    /**
     * returns visitSurname
     */

	public String getVisitSurname() {
		return visitSurname;
	}

    /**
     * parameters visitSurname
     */

	public void setVisitSurname(String visitSurname) {
		this.visitSurname = visitSurname;
	}

    /**
     * returns visitName
     */

	public String getVisitName() {
		return visitName;
	}

    /**
     * parameters visitName
     */

	public void setVisitName(String visitName) {
		this.visitName = visitName;
	}

    /**
     * returns visitWeather
     */

	public String getVisitWeather() {
		return visitWeather;
	}

    /**
     * parameters visitWeather
     */

	public void setVisitWeather(String visitWeather) {
		this.visitWeather = visitWeather;
	}

    /**
     * returns visitState
     */

	public String getVisitState() {
		return visitState;
	}

    /**
     * parameters visitState
     */

	public void setVisitState(String visitState) {
		this.visitState = visitState;
	}
	
	 /**
     * returns visitTrashBool
     */

	public boolean isVisitTrashBool() {
		return visitTrashBool;
	}

    /**
     * parameters visitTrashBool
     */

	public void setVisitTrashBool(boolean visitTrashBool) {
		this.visitTrashBool = visitTrashBool;
	}

    /**
     * returns visitTrash
     */

	public String getVisitTrash() {
		return visitTrash;
	}

    /**
     * parameters visitTrash
     */

	public void setVisitTrash(String visitTrash) {
		this.visitTrash = visitTrash;
	}
	
	 /**
     * returns visitSpraysBool
     */

	public boolean isVisitSpraysBool() {
		return visitSpraysBool;
	}

    /**
     * parameters visitSpraysBool
     */

	public void setVisitSpraysBool(boolean visitSpraysBool) {
		this.visitSpraysBool = visitSpraysBool;
	}

    /**
     * returns visitPhotos
     */

	public String getVisitSprays() {
		return visitSprays;
	}

    /**
     * parameters visitDate
     */

	public void setVisitSprays(String visitSprays) {
		this.visitSprays = visitSprays;
	}
	
	 /**
     * returns visitDamagesBool
     */

	public boolean isVisitDamagesBool() {
		return visitDamagesBool;
	}

    /**
     * parameters visitDamagesBool
     */

	public void setVisitDamagesBool(boolean visitDamagesBool) {
		this.visitDamagesBool = visitDamagesBool;
	}

    /**
     * returns visitDate
     */

	public String getVisitDamages() {
		return visitDamages;
	}

    /**
     * parameters visitDate
     */

	public void setVisitDamages(String visitDamages) {
		this.visitDamages = visitDamages;
	}

    /**
     * returns visitDate
     */

	public String getVisitDescription() {
		return visitDescription;
	}

    /**
     * parameters visitDate
     */

	public void setVisitDescription(String visitDescription) {
		this.visitDescription = visitDescription;
	}

    /**
     * returns visitDate
     */

	public String getVisitPhotos() {
		return visitPhotos;
	}

    /**
     * parameters visitPhotos
     */

	public void setVisitPhotos(String visitPhotos) {
		this.visitPhotos = visitPhotos;
	}

    /**
     * returns visitMeasuresBool
     */

	public boolean isVisitMeasuresBool() {
		return visitMeasuresBool;
	}

    /**
     * parameters visitMeasuresBool
     */

	public void setVisitMeasuresBool(boolean visitMeasuresBool) {
		this.visitMeasuresBool = visitMeasuresBool;
	}

    /**
     * returns visitMeasures
     */

	public String getVisitMeasures() {
		return visitMeasures;
	}

    /**
     * parameters visitMeasures
     */

	public void setVisitMeasures(String visitMeasures) {
		this.visitMeasures = visitMeasures;
	}

    /**
     * returns visitRemarks
     */

	public String getVisitRemarks() {
		return visitRemarks;
	}

    /**
     * parameters visitRemarks
     */

	public void setVisitRemarks(String visitRemarks) {
		this.visitRemarks = visitRemarks;
	}



	@Override
	protected void writeFields(StringBuilder builder) {
		super.writeFields(builder);
		builder.append(", visitDate=");
		builder.append(visitDate);
		builder.append(", visitObject=");
		builder.append(visitObject);
		builder.append(", visitSurname=");
		builder.append(visitSurname);
		builder.append(", visitName=");
		builder.append(visitName);
		builder.append(", visitWeather=");
		builder.append(visitWeather);
		builder.append(", visitState=");
		builder.append(visitState);
		builder.append(", visitTrashBool=");
		builder.append(visitTrashBool);
		builder.append(", visitTrash=");
		builder.append(visitTrash);
		builder.append(", visitSpraysBool=");
		builder.append(visitSpraysBool);
		builder.append(", visitSprays=");
		builder.append(visitSprays);
		builder.append(", visitDamagesBool=");
		builder.append(visitDamagesBool);
		builder.append(", visitDamages=");
		builder.append(visitDamages);
		builder.append(", visitDescription=");
		builder.append(visitDescription);
		builder.append(", visitPhotos=");
		builder.append(visitPhotos);
		builder.append(", visitMeasuresBool=");
		builder.append(visitMeasuresBool);
		builder.append(", visitMeasures=");
		builder.append(visitMeasures);
		builder.append(", visitRemarks=");
		builder.append(visitRemarks);
	}

	public String getBusinessId() {
		// TODO Auto-generated method stub
		return null;
	}
    
}